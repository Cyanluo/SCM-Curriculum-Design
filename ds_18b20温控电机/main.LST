C51 COMPILER V9.01   MAIN                                                                  06/25/2021 15:35:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OBJ\main.obj
COMPILER INVOKED BY: D:\keil 4.0\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND OBJECT(.\OBJ\main.ob
                    -j)

line level    source

   1          #include "reg51.h"
   2          #include "1602.h"
   3          #include "dev_l298n.h"
   4          #include "ds18b20.h"
   5          #include "timer.h"
   6          
   7          sbit BEEP = P2^3;
   8          sbit LED  =     P1^3;
   9          
  10          sbit key1 = P3^0;
  11          sbit key2 = P3^1;
  12          sbit key3 = P3^2;
  13          sbit Key_g = P3^7;
  14          
  15          bit led_flag = 0;
  16          
  17          uint h_threshold = 28, l_threshold = 25;
  18          uchar threshold_flag = 0;
  19          
  20          enum KEY_MODE
  21          {
  22                  NORMAL,
  23                  HIGH_THRESHOLD,
  24                  LOW_THRESHOLD
  25          } key_mode = NORMAL;
  26          
  27          void LED_F()
  28          {
  29   1              static uchar count = 0;
  30   1      
  31   1              if(led_flag && ( count++ >= 100))
  32   1              {
  33   2                      count = 0;
  34   2                      LED = LED == 1 ? 0 : 1;
  35   2              }
  36   1      }
  37          
  38          void disp_threshold()
  39          {
  40   1              write_com(0x0c);
  41   1              write_string(0x80 + 0x40, "L:");
  42   1              display_1602(0, l_threshold*10);
  43   1              write_dat(0xDF);
  44   1              write_dat(0x43);
  45   1              write_string(0, "H:");
  46   1              display_1602(0, h_threshold*10);
  47   1              write_dat(0xDF);
  48   1              write_dat(0x43);        
  49   1      }
  50          
  51          void keydscan() 
  52          {
  53   1              Key_g = 0;
  54   1              key1 = 1;
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 15:35:32 PAGE 2   

  55   1              key2 = 1;
  56   1              key3 = 1;
  57   1              
  58   1              if(key1==0)
  59   1              {
  60   2                      delay2(5);
  61   2                      if(key1==0)
  62   2                      {
  63   3                              switch(key_mode)
  64   3                              {
  65   4                                      case NORMAL:
  66   4                                              key_mode = LOW_THRESHOLD;
  67   4                                              break;
  68   4                                      case LOW_THRESHOLD:
  69   4                                              key_mode = HIGH_THRESHOLD;
  70   4                                              break;
  71   4                                      case HIGH_THRESHOLD:
  72   4                                              key_mode = NORMAL;
  73   4                                              break;
  74   4                              }
  75   3                              while(!key1);                                   
  76   3                      }
  77   2              }
  78   1              if(key2==0)
  79   1              {
  80   2                      delay2(5);
  81   2                      if(key2==0)
  82   2                      {
  83   3                              switch(key_mode)
  84   3                              {
  85   4                                      case HIGH_THRESHOLD:
  86   4                                              h_threshold++;
  87   4                                              break;
  88   4                                      case LOW_THRESHOLD:
  89   4                                              l_threshold++;
  90   4                              }
  91   3                              disp_threshold();
  92   3                              while(!key2);
  93   3                      }
  94   2              }
  95   1              if(key3==0)
  96   1              {
  97   2                      delay2(5);
  98   2                      if(key3==0)
  99   2                      {
 100   3                              switch(key_mode)
 101   3                              {                                       
 102   4                                      case HIGH_THRESHOLD:
 103   4                                              h_threshold--;
 104   4                                              break;
 105   4                                      case LOW_THRESHOLD:
 106   4                                              l_threshold--;
 107   4                              }
 108   3                              disp_threshold();
 109   3                              while(!key3);
 110   3                      }
 111   2              }
 112   1      }
 113          
 114          int main()
 115          {       
 116   1              float temp = 0, speed = 0;
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 15:35:32 PAGE 3   

 117   1      
 118   1              init_1602();
 119   1              timer0_init(PWM_TIME_TICK);
 120   1              l298n_init();
 121   1              tevent_register("LED", LED_F);
 122   1              tevent_register("KEY", keydscan);
 123   1              disp_threshold();
 124   1      
 125   1              while(1)
 126   1              {
 127   2                      if(key_mode == NORMAL)
 128   2                      {
 129   3                              temp = get_tmp() / 10.0;
 130   3                              
 131   3                              if(temp > 40)
 132   3                                      continue;
 133   3      
 134   3                              if(temp <= l_threshold || temp >= h_threshold)
 135   3                              {
 136   4                                      led_flag = 1;
 137   4                                      BEEP = 0;
 138   4                                      
 139   4                                      if(temp <= l_threshold)
 140   4                                      {
 141   5                                              set_direction(BACKWOARD);
 142   5              
 143   5                                              speed = (l_threshold - temp) / l_threshold;                             
 144   5                                      }
 145   4                                      else
 146   4                                      {
 147   5                                              set_direction(FOREWARD);
 148   5              
 149   5                                              speed = (temp - h_threshold) / h_threshold;
 150   5                                      }
 151   4                                      
 152   4                                      speed > 1 ? set_speed(PWM_T/2) : set_speed(PWM_T * speed/2);    
 153   4                              }
 154   3                              else
 155   3                              {
 156   4                                      led_flag = 0;
 157   4              
 158   4                                      LED = 1;
 159   4                                      BEEP = 1;
 160   4              
 161   4                                      set_speed(0);
 162   4                              }
 163   3              
 164   3                              write_string(0x80, "Temp:");
 165   3                              display_1602(0, temp*10);
 166   3                              write_dat(0xDF);
 167   3                              write_dat(0x43);
 168   3                      }
 169   2                      else
 170   2                      {
 171   3                              stop();
 172   3                      }
 173   2      
 174   2                      switch(key_mode)
 175   2                      {
 176   3                              case NORMAL:
 177   3                                      write_com(0x0c);
 178   3                                      break;
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 15:35:32 PAGE 4   

 179   3                              case HIGH_THRESHOLD:
 180   3                                      write_com(0x80 + 0x40 + 8);
 181   3                                      write_com(0x0f);
 182   3                                      break;
 183   3                              case LOW_THRESHOLD:
 184   3                                      write_com(0x80 + 0x40);
 185   3                                      write_com(0x0f);
 186   3                      }               
 187   2              }
 188   1      
 189   1              return 0;
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    734    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
