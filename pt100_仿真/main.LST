C51 COMPILER V9.01   MAIN                                                                  06/25/2021 16:11:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OBJ\main.obj
COMPILER INVOKED BY: D:\keil 4.0\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND OBJECT(.\OBJ\main.ob
                    -j)

line level    source

   1          #include "reg51.h"
   2          #include "1602.h"
   3          #include "dev_l298n.h"
   4          #include "adc0804.h"
   5          #include "pt100.h"
   6          #include "timer.h"
   7          
   8          sbit BEEP = P1^7;
   9          sbit LED  =     P1^3;
  10          
  11          sbit key1 = P3^0;
  12          sbit key2 = P3^1;
  13          sbit key3 = P3^2;
  14          
  15          bit led_flag = 0;
  16          
  17          uint h_threshold = 50, l_threshold = 30;
  18          uchar threshold_flag = 0;
  19          
  20          enum KEY_MODE
  21          {
  22                  NORMAL,
  23                  HIGH_THRESHOLD,
  24                  LOW_THRESHOLD
  25          } key_mode = NORMAL;
  26          
  27          void LED_F()
  28          {
  29   1              static uchar count = 0;
  30   1      
  31   1              if(led_flag && ( count++ >= 100))
  32   1              {
  33   2                      count = 0;
  34   2                      LED = LED == 1 ? 0 : 1;
  35   2              }
  36   1      }
  37          
  38          void disp_threshold()
  39          {
  40   1              write_com(0x0c);
  41   1              write_string(0x80 + 0x40, "L:");
  42   1              display_1602(0, l_threshold*10);
  43   1              write_dat(0xDF);
  44   1              write_dat(0x43);
  45   1              write_string(0, "H:");
  46   1              display_1602(0, h_threshold*10);
  47   1              write_dat(0xDF);
  48   1              write_dat(0x43);        
  49   1      }
  50          
  51          void display_temp(float temp)
  52          {
  53   1              write_string(0x80, "Temp:");
  54   1              get_sign() == 0 ? write_dat('+') : write_dat('-');
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 16:11:42 PAGE 2   

  55   1              display_1602(0, temp*10);
  56   1              write_dat(0xDF);
  57   1              write_dat(0x43);
  58   1      }
  59          
  60          void keydscan() 
  61          {
  62   1              key1 = 1;
  63   1              key2 = 1;
  64   1              key3 = 1;
  65   1      
  66   1              if(key1==0)             // 按键模式切换
  67   1              {
  68   2                      delay2(5);
  69   2                      if(key1==0)  
  70   2                      {
  71   3                              switch(key_mode)
  72   3                              {
  73   4                                      case NORMAL:
  74   4                                              key_mode = LOW_THRESHOLD;
  75   4                                              break;
  76   4                                      case LOW_THRESHOLD:
  77   4                                              key_mode = HIGH_THRESHOLD;
  78   4                                              break;
  79   4                                      case HIGH_THRESHOLD:
  80   4                                              key_mode = NORMAL;
  81   4                                              break;
  82   4                              }
  83   3                              while(!key1);                                   
  84   3                      }
  85   2              }
  86   1              if(key2==0)             // 加
  87   1              {
  88   2                      delay2(5);
  89   2                      if(key2==0)
  90   2                      {
  91   3                              switch(key_mode)
  92   3                              {
  93   4                                      case HIGH_THRESHOLD:
  94   4                                              h_threshold++;
  95   4                                              break;
  96   4                                      case LOW_THRESHOLD:
  97   4                                              l_threshold++;
  98   4                              }
  99   3                              disp_threshold();
 100   3                              while(!key2);
 101   3                      }
 102   2              }
 103   1              if(key3==0)              // 减
 104   1              {
 105   2                      delay2(5);
 106   2                      if(key3==0)
 107   2                      {
 108   3                              switch(key_mode)
 109   3                              {                                       
 110   4                                      case HIGH_THRESHOLD:
 111   4                                              h_threshold--;
 112   4                                              break;
 113   4                                      case LOW_THRESHOLD:
 114   4                                              l_threshold--;
 115   4                              }
 116   3                              disp_threshold();
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 16:11:42 PAGE 3   

 117   3                              while(!key3);
 118   3                      }
 119   2              }
 120   1      }
 121          
 122          int main()
 123          {       
 124   1              float temp = 0, speed = 0;
 125   1              uchar i;        
 126   1              uint ad_data[11] = {0};
 127   1      
 128   1              init_1602();
 129   1              timer0_init(PWM_TIME_TICK);
 130   1              l298n_init();
 131   1              tevent_register("LED", LED_F);
 132   1              tevent_register("KEY", keydscan);
 133   1              disp_threshold();
 134   1              
 135   1              while(1)
 136   1              {
 137   2                      //keydscan();
 138   2                      if(key_mode == NORMAL)
 139   2                      {
 140   3                              for(i=0; i<11; i++)
 141   3                              {
 142   4                                      ad_data[i] = ad_read();
 143   4                                      delay2(5);
 144   4                              }               
 145   3              
 146   3                              temp = temperature(ad_data, 11) - 1;
 147   3              
 148   3                              if(temp <= l_threshold || temp >= h_threshold)
 149   3                              {
 150   4                                      led_flag = 1;
 151   4                                      BEEP = 0;
 152   4                                      
 153   4                                      if(temp <= l_threshold)
 154   4                                      {
 155   5                                              set_direction(BACKWOARD);
 156   5              
 157   5                                              speed = (l_threshold - temp) / l_threshold;                             
 158   5                                      }
 159   4                                      else
 160   4                                      {
 161   5                                              set_direction(FOREWARD);
 162   5              
 163   5                                              speed = (temp - h_threshold) / h_threshold;
 164   5                                      }
 165   4                                      
 166   4                                      speed > 1 ? set_speed(PWM_T) : set_speed(PWM_T * speed);        
 167   4                              }
 168   3                              else
 169   3                              {
 170   4                                      led_flag = 0;
 171   4              
 172   4                                      LED = 1;
 173   4                                      BEEP = 1;
 174   4              
 175   4                                      set_speed(0);
 176   4                              }
 177   3              
 178   3                              display_temp(temp);
C51 COMPILER V9.01   MAIN                                                                  06/25/2021 16:11:42 PAGE 4   

 179   3                      }
 180   2                      else
 181   2                      {
 182   3                              stop();
 183   3                      }
 184   2      
 185   2                      switch(key_mode)
 186   2                      {
 187   3                              case NORMAL:
 188   3                                      write_com(0x0c);
 189   3                                      break;
 190   3                              case HIGH_THRESHOLD:
 191   3                                      write_com(0x80 + 0x40 + 8);
 192   3                                      write_com(0x0f);
 193   3                                      break;
 194   3                              case LOW_THRESHOLD:
 195   3                                      write_com(0x80 + 0x40);
 196   3                                      write_com(0x0f);
 197   3                      }               
 198   2              }
 199   1      
 200   1              return 0;
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    784    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
