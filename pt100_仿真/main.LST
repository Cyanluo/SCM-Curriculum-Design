C51 COMPILER V9.01   MAIN                                                                  06/28/2021 00:00:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OBJ\main.obj
COMPILER INVOKED BY: D:\keil 4.0\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND OBJECT(.\OBJ\main.ob
                    -j)

line level    source

   1          #include "reg51.h"
   2          #include "1602.h"
   3          #include "dev_l298n.h"
   4          #include "adc0804.h"
   5          #include "pt100.h"
   6          #include "timer.h"
   7          
   8          sbit BEEP = P1^7;
   9          sbit LED  =     P1^3;
  10          
  11          sbit key1 = P3^0;
  12          sbit key2 = P3^1;
  13          sbit key3 = P3^2;
  14          
  15          bit led_flag = 0;
  16          
  17          uchar test = 0;
  18          uint h_threshold = 50, l_threshold = 30;
  19          uchar threshold_flag = 0;
  20          
  21          enum KEY_MODE
  22          {
  23                  NORMAL,
  24                  HIGH_THRESHOLD,
  25                  LOW_THRESHOLD
  26          } key_mode = NORMAL;
  27          
  28          void LED_F()
  29          {
  30   1              static uchar count = 0;
  31   1      
  32   1              if(led_flag && ( count++ >= 100))
  33   1              {
  34   2                      count = 0;
  35   2                      LED = LED == 1 ? 0 : 1;
  36   2              }
  37   1      }
  38          
  39          void disp_threshold()
  40          {
  41   1              write_com(0x0c);
  42   1              write_string(0x80 + 0x40, "L:");
  43   1              display_1602(0, l_threshold*10);
  44   1              write_dat(0xDF);
  45   1              write_dat(0x43);
  46   1              write_string(0, "H:");
  47   1              display_1602(0, h_threshold*10);
  48   1              write_dat(0xDF);
  49   1              write_dat(0x43);        
  50   1      }
  51          
  52          void display_temp(float temp)
  53          {
  54   1              write_string(0x80, "Temp:");
C51 COMPILER V9.01   MAIN                                                                  06/28/2021 00:00:08 PAGE 2   

  55   1              get_sign() == 0 ? write_dat('+') : write_dat('-');
  56   1              display_1602(0, temp*10);
  57   1              write_dat(0xDF);
  58   1              write_dat(0x43);
  59   1      }
  60          
  61          void clock()
  62          {
  63   1              test++;
  64   1              if(test > 60)
  65   1              {
  66   2                      test = 0;
  67   2              }
  68   1      }
  69          
  70          void keydscan() 
  71          {
  72   1              key1 = 1;
  73   1              key2 = 1;
  74   1              key3 = 1;
  75   1      
  76   1              if(key1==0)             // 按键模式切换
  77   1              {
  78   2                      delay2(5);
  79   2                      if(key1==0)  
  80   2                      {
  81   3                              switch(key_mode)
  82   3                              {
  83   4                                      case NORMAL:
  84   4                                              key_mode = LOW_THRESHOLD;
  85   4                                              break;
  86   4                                      case LOW_THRESHOLD:
  87   4                                              key_mode = HIGH_THRESHOLD;
  88   4                                              break;
  89   4                                      case HIGH_THRESHOLD:
  90   4                                              key_mode = NORMAL;
  91   4                                              break;
  92   4                              }
  93   3                              while(!key1);                                   
  94   3                      }
  95   2              }
  96   1              if(key2==0)             // 加
  97   1              {
  98   2                      delay2(5);
  99   2                      if(key2==0)
 100   2                      {
 101   3                              switch(key_mode)
 102   3                              {
 103   4                                      case HIGH_THRESHOLD:
 104   4                                              h_threshold++;
 105   4                                              break;
 106   4                                      case LOW_THRESHOLD:
 107   4                                              l_threshold++;
 108   4                              }
 109   3                              disp_threshold();
 110   3                              while(!key2);
 111   3                      }
 112   2              }
 113   1              if(key3==0)              // 减
 114   1              {
 115   2                      delay2(5);
 116   2                      if(key3==0)
C51 COMPILER V9.01   MAIN                                                                  06/28/2021 00:00:08 PAGE 3   

 117   2                      {
 118   3                              switch(key_mode)
 119   3                              {                                       
 120   4                                      case HIGH_THRESHOLD:
 121   4                                              h_threshold--;
 122   4                                              break;
 123   4                                      case LOW_THRESHOLD:
 124   4                                              l_threshold--;
 125   4                              }
 126   3                              disp_threshold();
 127   3                              while(!key3);
 128   3                      }
 129   2              }
 130   1      }
 131          
 132          int main()
 133          {       
 134   1              float temp = 0, speed = 0;
 135   1              uchar i;        
 136   1              uint ad_data[11] = {0};
 137   1      
 138   1              init_1602();
 139   1              timer0_init(PWM_TIME_TICK);
 140   1              //timer0_init(1000);
 141   1              //tevent_register("clock", clock);
 142   1      //      while(1)
 143   1      //      {
 144   1      //              display_1602(0x80, test*10);
 145   1      //      }
 146   1              l298n_init();
 147   1              tevent_register("LED", LED_F);
 148   1              tevent_register("KEY", keydscan);
 149   1              disp_threshold();
 150   1              
 151   1              while(1)
 152   1              {
 153   2                      //keydscan();
 154   2                      if(key_mode == NORMAL)
 155   2                      {
 156   3                              for(i=0; i<11; i++)
 157   3                              {
 158   4                                      ad_data[i] = ad_read();
 159   4                                      delay2(5);
 160   4                              }               
 161   3              
 162   3                              temp = temperature(ad_data, 11) - 1;
 163   3              
 164   3                              if(temp <= l_threshold || temp >= h_threshold)
 165   3                              {
 166   4                                      led_flag = 1;
 167   4                                      BEEP = 0;
 168   4                                      
 169   4                                      if(temp <= l_threshold)
 170   4                                      {
 171   5                                              set_direction(BACKWOARD);
 172   5              
 173   5                                              speed = (l_threshold - temp) / l_threshold;                             
 174   5                                      }
 175   4                                      else
 176   4                                      {
 177   5                                              set_direction(FOREWARD);
 178   5              
C51 COMPILER V9.01   MAIN                                                                  06/28/2021 00:00:08 PAGE 4   

 179   5                                              speed = (temp - h_threshold) / h_threshold;
 180   5                                      }
 181   4                                      
 182   4                                      speed > 1 ? set_speed(PWM_T) : set_speed(PWM_T * speed * 2);    
 183   4                              }
 184   3                              else
 185   3                              {
 186   4                                      led_flag = 0;
 187   4              
 188   4                                      LED = 1;
 189   4                                      BEEP = 1;
 190   4              
 191   4                                      set_speed(0);
 192   4                              }
 193   3              
 194   3                              display_temp(temp);
 195   3                      }
 196   2                      else
 197   2                      {
 198   3                              stop();
 199   3                      }
 200   2      
 201   2                      switch(key_mode)
 202   2                      {
 203   3                              case NORMAL:
 204   3                                      write_com(0x0c);
 205   3                                      break;
 206   3                              case HIGH_THRESHOLD:
 207   3                                      write_com(0x80 + 0x40 + 8);
 208   3                                      write_com(0x0f);
 209   3                                      break;
 210   3                              case LOW_THRESHOLD:
 211   3                                      write_com(0x80 + 0x40);
 212   3                                      write_com(0x0f);
 213   3                      }               
 214   2              }
 215   1      
 216   1              return 0;
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    797    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
